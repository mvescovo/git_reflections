How did the viewing a diff between two versions of a file help you see the 
bug that was introduced?

Well it pointed it out to me.

How could having easy access to the entire history of a file make you a
more efficient programmer in the longer term?

It could allow me compare with the current version or even just revert to a
previous version if I can't see the difference or just want to use that 
version rather than redo all the code back what I thought it had before.

What do you think are the pros and cons of manually choosing when to create
a commit, like you do in Git, vs having versions automatically saved, like
Google Docs does?

Not so many commits to look through. Commits easier to understand and
quicker to read. Descriptions are easier; we know what we're looking for. 
Makes it easier for other developers that didn't write the code.

Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while other, like Google Docs, treat each file
separately?

Because files in Google Docs don't contain bugs that span multiple files.
They aren't related in the way that separate code files are. Also, since
changes are saved automatically every time there is a change, there can only
be one file changed at a time during the autosave.

How can you use the commands git log and git diff to view the history of files?

Use git log to list the history, use git diff with the ID's of two commits as
paramaters. It will show the differences.

How might using version control make you more confident to make changes that
could break something?

I can rest assured that I can always revert to the working version and 
discard any changes. I have the working version backed up.

Now that you have your workspace set up, what do you want to try using Git
for?

Saving my Android projects.
